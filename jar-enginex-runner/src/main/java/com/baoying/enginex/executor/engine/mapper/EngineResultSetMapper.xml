<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baoying.enginex.executor.engine.mapper.EngineResultSetMapper">

     <resultMap type="engineresultset" id="engineresultsetMap">
	     <id column="id" property="id"/>
	     <result column="input" property="input"/>    
	     <result column="create_datetime" property="create_datetime"/>
	     <result column="result" property="result"/>    
	     <result column="engine_id" property="engine_id"/>    	      
	     <result column="uuid" property="uuid"/>
	     <result column="engine_version" property="engine_version"/>
	     <result column="engine_name" property="engine_name"/>
	     <result column="engine_code" property="engine_code"/>
	     <result column="type" property="type"/>
	     <result column="sub_version" property="subVersion"/>
	     <result column="scorecardscore" property="scorecardscore"/>
	     <result column="batch_no" property="batchNo"/>
	     <result column="datilResult" property="datilResult"/>
	     <result column="startTime" property="startTime"/>
	     <result column="costTime" property="costTime"/>
	     <collection property="resultSetList" column="id" select="selectResultSetList" ofType="resultsetlist" javaType="ArrayList" />
     </resultMap>  
     <resultMap type="resultsetlist" id="resultSetListResult">
		 <id column="subId" property="id"/>
	     <result column="subType" property="type"/>
	     <result column="code" property="code"/>    
	     <result column="name" property="name"/>    	      
	     <result column="description" property="description"/>
	     <result column="resultset_id" property="resultsetId"/>
	     <result column="expression" property="expression"/>
	</resultMap>
     
     <select id="selectResultSetList" parameterType="Long" resultType="engineresultset" resultMap="resultSetListResult"  >  
        select
        r.id,r.input,r.create_datetime,r.result,r.engine_id,r.uuid,r.engine_version,r.engine_name,r.engine_code,
        r.type,r.sub_version,r.scorecardscore,
	    s.id as subId,s.type as subType,s.code,s.name,s.description,s.resultset_id,s.expression
     	from t_resultset r join t_resultset_list s on r.id = s.resultset_id where r.id = #{resultSetId} order by r.id asc
    </select>
    
    <select id="getResultSetDetailsById" parameterType="Long" resultMap="engineresultsetMap">
		select *
		from t_resultset 
		where id = #{resultSetId} 
	</select>   
     
     <!-- 新增引擎并返回ID -->
     <insert id="insertResultSet" parameterType="engineresultset"  useGeneratedKeys="true" keyProperty="id">
	   INSERT INTO 
	       t_resultset
	    <trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				uid,
			</if>
			<if test="pid != null">
				pid,
			</if>
			<if test="input != null">
	           input,
	        </if>
			<if test="output != null">
				output,
			</if>
			<if test="result != null">
	           result,
	        </if>
	        <if test="engine_id != null">
	           engine_id,
	        </if>
	        <if test="uuid != null">
	           uuid,
	        </if>	       
	        <if test="engine_version != null">
	           engine_version,
	        </if>
	        <if test="engine_name != null">
	           engine_name,
	        </if>
	          <if test="engine_code != null">
	           engine_code,
	        </if>
	        <if test="type != null">
	           type,
	        </if>
	        <if test="subVersion != null">
	           sub_version,
	        </if>
	        <if test="scorecardscore != null">
	           scorecardscore,
	        </if>
	        <if test="batchNo != null">
	           batch_no,
	        </if>        
	        <if test="datilResult != null">
	           datilResult,
	        </if>        
	    </trim>
	    values
	     <trim prefix="(" suffix=")" suffixOverrides=",">
	        <if test="uid != null">
	           #{uid},
	        </if>
			 <if test="pid != null">
				 #{pid},
			 </if>
			 <if test="input != null">
				 #{input},
			 </if>
			 <if test="output != null">
				 #{output},
			 </if>
			 <if test="result != null">
	           #{result},
	        </if>
	        <if test="engine_id != null">
	           #{engine_id},
	        </if>
	        <if test="uuid != null">
	           #{uuid},
	        </if>
	        <if test="engine_version != null">
	           #{engine_version},
	        </if>
	        <if test="engine_name != null">
	           #{engine_name},
	        </if>
	        <if test="engine_code != null">
	           #{engine_code},
	        </if>
	        <if test="type != null">
	           #{type},
	        </if>
	        <if test="subVersion != null">
	            #{subVersion},
	        </if>
	        <if test="scorecardscore != null">
	            #{scorecardscore},
	        </if>
	        <if test="batchNo != null">
	            #{batchNo},
	        </if>	    	         
	        <if test="datilResult != null">
	            #{datilResult},
	        </if>	    	         
	    </trim>
	</insert>
	<select id="getResultSetByList"   parameterType="engineresultset" resultMap="engineresultsetMap" >
       SELECT 
            *
         FROM  
            t_engine 
         where 
                status>-1  and
                organ_id =#{organId}
               
		 <if test="startDate != null and startDate !=''">	
		 <![CDATA[ and create_datetime  >=  #{startDate}  ]]>	    
     	 
		 </if>
		 <if test="endDate != null and endDate !=''">		    
     		 <![CDATA[ and create_datetime  <=  #{endDate}  ]]>  
		 </if>	
		 order by create_datetime desc		
	</select>
	
	<select id="getEngineResultSetBySegment"   parameterType="map" resultMap="engineresultsetMap" >
       SELECT 
            *
         FROM  
            t_resultset 
         where engine_id = #{engineId}
               
		 <if test="startDate != null and startDate !=''">	
		 <![CDATA[ and create_datetime  >=  #{startDate}  ]]>	    
     	 
		 </if>
		 <if test="endDate != null and endDate !=''">		    
     		 <![CDATA[ and create_datetime  <=  #{endDate}  ]]>  
		 </if>	
		 order by create_datetime desc		
	</select>
	
	<select id="getResultSetById" parameterType="engineresultset" resultMap="engineresultsetMap">
     select  * from t_resultset where  id = #{id} 
  </select>	
  
  	<select id="getBatchTestResultSetByEngineId" parameterType="map" resultMap="engineresultsetMap">
  	    select batch_no, engine_id, engine_name, startTime, costTime
        from(
    	 select rs.batch_no, e.id as engine_id, e.name as engine_name
    	        , min(rs.create_datetime) as startTime
    	        , TIMESTAMPDIFF(second,min(rs.create_datetime),max(rs.create_datetime)) as costTime
    	   from t_resultset rs, t_engine e
    	  where rs.engine_id = e.id
    	        and ( batch_no is not null and batch_no != '' )
    	        and e.organ_id = ( select organ_id from t_user where user_id = #{userId} )
    	        and rs.engine_id = #{engineId}
    	  group by rs.batch_no, e.id, e.name
    	)x
    	order by x.startTime desc
  	</select>
  	
  	<select id="getBatchTestResultSetByBatchNo" parameterType="map" resultMap="engineresultsetMap">
		select rs.*
          from t_resultset rs, t_engine e
         where rs.engine_id = e.id
               and e.organ_id = ( select organ_id from t_user where user_id = #{userId} )
               and rs.batch_no = #{batchNo}
	</select>

	<update id="updateResultOutput" parameterType="engineresultset">
		update t_resultset t set t.`output` = #{output} where t.`id` = #{id}
	</update>

	<update id="updateResultById">
		UPDATE t_resultset
		set hbase_row_key = #{rowKeyStr}
		where id = #{resultId}
	</update>

</mapper>
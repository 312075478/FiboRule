<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baoying.enginex.executor.datamanage.mapper.FieldMapper">
     <cache></cache>
     <resultMap type="com.baoying.enginex.executor.datamanage.model.Field" id="fieldMap">
	     <id column="id" property="id"/>    
	     <result column="field_en" property="fieldEn"/>    
	     <result column="field_cn" property="fieldCn"/>    
	     <result column="field_typeid" property="fieldTypeId"/>
	     <result column="value_type" property="valueType"/> 
	     <result column="value_scope" property="valueScope"/> 
	     <result column="is_derivative" property="isDerivative"/> 
	     <result column="is_output" property="isOutput"/> 
	     <result column="is_common" property="isCommon"/>
	     <result column="formula" property="formula"/> 
	     <result column="formula_show" property="formulaShow"/>  
	     <result column="orig_fieldid" property="origFieldId"/>
	     <result column="used_fieldid" property="usedFieldId"/>
	     <result column="author" property="author"/>
	     <result column="nickName" property="nickName"/>
	     <result column="created" property="created"/>
	     
	     <result column="field_type" property="fieldType"/>
	     <result column="engine_id" property="engineId"/>
	     <result column="engineName" property="engineName"/>
	     <result column="status" property="status"/>
	     <result column="fieldRelId" property="fieldRelId"/>

	     <result column="is_use_sql" property="isUseSql"/>
	     <result column="data_source_id" property="dataSourceId"/>
	     <result column="sql_statement" property="sqlStatement"/>
	     <result column="dict_variable" property="dictVariable"/>
     </resultMap>
     

	<select id="findByFieldIdbyorganId" parameterType="map"  resultMap="fieldMap">
		 select   f.id, f.field_en, f.field_cn , f.field_typeid
		        , f.value_type , f.value_scope, f.is_derivative
		        , f.is_output , f.is_common , f.formula, f.formula_show
		        , f.orig_fieldid , used_fieldid
		        , r.engine_id
		        , p.field_type
                , f.is_use_sql, f.data_source_id, f.sql_statement, f.dict_variable
           from t_field f,t_field_user_rel r,t_field_type p
          where f.id = r.field_id
                and f.field_typeid = p.id
                and r.organ_id = #{organId} 
                <if test="engineId != null">
                    and r.engine_id = #{engineId}
                </if>
                <if test="engineId == null">
                    and r.engine_id is null
                </if>
                and f.id = #{id}
                
	</select>

		<select id="findFieldByIdsbyorganId" parameterType="map"  resultMap="fieldMap">
		 select   f.id, f.field_en , f.field_cn , f.field_typeid
		        , f.value_type , f.value_scope , f.is_derivative
		        , f.is_output , f.is_common , f.formula, f.formula_show
		        , r.engine_id
		        , f.orig_fieldid
		        , p.field_type
                , f.is_use_sql, f.data_source_id, f.sql_statement, f.sql_variable, f.is_interface, f.interface_id, f.interface_parse_field, f.json_value, f.dict_variable
           from t_field f,t_field_user_rel r,t_field_type p
          where f.id = r.field_id
                and f.field_typeid = p.id
                and r.organ_id =  #{organId}
                <if test="isDerivative != null">
                    and f.is_derivative = #{isDerivative}
                </if>
                and f.id in
                   <foreach collection="Ids" item="item" index="index" open="(" separator="," close=")">  
                      #{item}
                   </foreach>
	</select>

    <select id="findByFieldEnbyorganId" parameterType="map"  resultMap="fieldMap">
         select f.id, f.field_en , f.field_cn , f.field_typeid
		        , f.value_type , f.value_scope , f.is_derivative
		        , f.is_output , f.is_common , f.formula, f.formula_show, f.dict_variable
         from t_field f,t_field_user_rel r
         where f.id = r.field_id
               and f.field_en = #{fieldEn}
               and r.organ_id = #{organId} 
               and r.status = 1
	</select>

	<select id="findByFieldCnbyorganId" parameterType="map"  resultMap="fieldMap">
         select f.id, f.field_en , f.field_cn , f.field_typeid
		        , f.value_type , f.value_scope , f.is_derivative
		        , f.is_output , f.is_common , f.formula, f.formula_show
		        , f.orig_fieldid, f.dict_variable
         from t_field f,t_field_user_rel r
         where f.id = r.field_id
               and f.field_cn = #{fieldCn}
               and r.organ_id = #{organId}
               and r.status = 1
	</select>
	



	<select id="findByFieldCnNoEngineIdbyorganId" parameterType="map"  resultMap="fieldMap">
         select f.id, f.field_en as fieldEn, f.field_cn as fieldCn, f.field_typeid as fieldTypeId
		        , f.value_type as valueType, f.value_scope as valueScope, f.is_derivative as isDerivative
		        , f.is_output as isOutput, f.is_common as isCommon, f.formula, f.formula_show as formulaShow
		        , f.orig_fieldid as origFieldId, f.dict_variable as dictVariable
         from t_field f,t_field_user_rel r
         where f.id = r.field_id
               and f.field_cn = #{fieldCn}
               and r.organ_id = #{organId} 
               and r.engine_id is null
               and r.status = 1
	</select>

    <select id="selectFieldListByIds"  parameterType="list" resultMap="fieldMap">
        select f.id, f.field_en , f.field_cn , f.field_typeid
        , f.value_type , f.value_scope , f.is_derivative
        , f.is_output , f.is_common , f.formula, f.formula_show
        , f.orig_fieldid
        , p.field_type
        , f.is_use_sql, f.data_source_id, f.sql_statement, f.dict_variable
        from t_field f,t_field_type p
        where f.field_typeid=p.id
        and f.id in
        <foreach collection="ids" item="id" separator="," open="(" close=")" >
            #{id}
        </foreach>
    </select>
	<select id="selectFieldListByEns" parameterType="list" resultMap="fieldMap">
        select f.id, f.field_en , f.field_cn , f.field_typeid
        , f.value_type , f.value_scope , f.is_derivative
        , f.is_output , f.is_common , f.formula, f.formula_show
        , f.orig_fieldid
        , p.field_type
        , f.is_use_sql, f.data_source_id, f.sql_statement, f.dict_variable
        from t_field f,t_field_type p
        where f.field_typeid=p.id
        and f.field_en in
        <foreach collection="ens" item="en" separator="," open="(" close=")" >
            #{en}
        </foreach>
    </select>
</mapper>